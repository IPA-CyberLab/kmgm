// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kmgm.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AuthenticationType int32

const (
	AuthenticationType_UNSPECIFIED     AuthenticationType = 0
	AuthenticationType_ANONYMOUS       AuthenticationType = 1
	AuthenticationType_BOOTSTRAP_TOKEN AuthenticationType = 2
	AuthenticationType_CLIENT_CERT     AuthenticationType = 3
)

var AuthenticationType_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "ANONYMOUS",
	2: "BOOTSTRAP_TOKEN",
	3: "CLIENT_CERT",
}

var AuthenticationType_value = map[string]int32{
	"UNSPECIFIED":     0,
	"ANONYMOUS":       1,
	"BOOTSTRAP_TOKEN": 2,
	"CLIENT_CERT":     3,
}

func (x AuthenticationType) String() string {
	return proto.EnumName(AuthenticationType_name, int32(x))
}

func (AuthenticationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d5b8bd6158ea4246, []int{0}
}

type HelloRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5b8bd6158ea4246, []int{0}
}

func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (m *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(m, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

type HelloResponse struct {
	ApiVersion           int32              `protobuf:"varint,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	AuthenticationType   AuthenticationType `protobuf:"varint,2,opt,name=authentication_type,json=authenticationType,proto3,enum=kmgm.AuthenticationType" json:"authentication_type,omitempty"`
	AuthenticatedUser    string             `protobuf:"bytes,3,opt,name=authenticated_user,json=authenticatedUser,proto3" json:"authenticated_user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *HelloResponse) Reset()         { *m = HelloResponse{} }
func (m *HelloResponse) String() string { return proto.CompactTextString(m) }
func (*HelloResponse) ProtoMessage()    {}
func (*HelloResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5b8bd6158ea4246, []int{1}
}

func (m *HelloResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloResponse.Unmarshal(m, b)
}
func (m *HelloResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloResponse.Marshal(b, m, deterministic)
}
func (m *HelloResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloResponse.Merge(m, src)
}
func (m *HelloResponse) XXX_Size() int {
	return xxx_messageInfo_HelloResponse.Size(m)
}
func (m *HelloResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HelloResponse proto.InternalMessageInfo

func (m *HelloResponse) GetApiVersion() int32 {
	if m != nil {
		return m.ApiVersion
	}
	return 0
}

func (m *HelloResponse) GetAuthenticationType() AuthenticationType {
	if m != nil {
		return m.AuthenticationType
	}
	return AuthenticationType_UNSPECIFIED
}

func (m *HelloResponse) GetAuthenticatedUser() string {
	if m != nil {
		return m.AuthenticatedUser
	}
	return ""
}

type GetVersionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionRequest) Reset()         { *m = GetVersionRequest{} }
func (m *GetVersionRequest) String() string { return proto.CompactTextString(m) }
func (*GetVersionRequest) ProtoMessage()    {}
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5b8bd6158ea4246, []int{2}
}

func (m *GetVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionRequest.Unmarshal(m, b)
}
func (m *GetVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionRequest.Marshal(b, m, deterministic)
}
func (m *GetVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionRequest.Merge(m, src)
}
func (m *GetVersionRequest) XXX_Size() int {
	return xxx_messageInfo_GetVersionRequest.Size(m)
}
func (m *GetVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionRequest proto.InternalMessageInfo

type GetVersionResponse struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Commit               string   `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionResponse) Reset()         { *m = GetVersionResponse{} }
func (m *GetVersionResponse) String() string { return proto.CompactTextString(m) }
func (*GetVersionResponse) ProtoMessage()    {}
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5b8bd6158ea4246, []int{3}
}

func (m *GetVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionResponse.Unmarshal(m, b)
}
func (m *GetVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionResponse.Marshal(b, m, deterministic)
}
func (m *GetVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionResponse.Merge(m, src)
}
func (m *GetVersionResponse) XXX_Size() int {
	return xxx_messageInfo_GetVersionResponse.Size(m)
}
func (m *GetVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionResponse proto.InternalMessageInfo

func (m *GetVersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *GetVersionResponse) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

type DistinguishedName struct {
	CommonName           string   `protobuf:"bytes,1,opt,name=common_name,json=commonName,proto3" json:"common_name,omitempty"`
	Organization         string   `protobuf:"bytes,2,opt,name=organization,proto3" json:"organization,omitempty"`
	OrganizationalUnit   string   `protobuf:"bytes,3,opt,name=organizational_unit,json=organizationalUnit,proto3" json:"organizational_unit,omitempty"`
	Country              string   `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	Locality             string   `protobuf:"bytes,5,opt,name=locality,proto3" json:"locality,omitempty"`
	Province             string   `protobuf:"bytes,6,opt,name=province,proto3" json:"province,omitempty"`
	StreetAddress        string   `protobuf:"bytes,7,opt,name=street_address,json=streetAddress,proto3" json:"street_address,omitempty"`
	PostalCode           string   `protobuf:"bytes,8,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DistinguishedName) Reset()         { *m = DistinguishedName{} }
func (m *DistinguishedName) String() string { return proto.CompactTextString(m) }
func (*DistinguishedName) ProtoMessage()    {}
func (*DistinguishedName) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5b8bd6158ea4246, []int{4}
}

func (m *DistinguishedName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DistinguishedName.Unmarshal(m, b)
}
func (m *DistinguishedName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DistinguishedName.Marshal(b, m, deterministic)
}
func (m *DistinguishedName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistinguishedName.Merge(m, src)
}
func (m *DistinguishedName) XXX_Size() int {
	return xxx_messageInfo_DistinguishedName.Size(m)
}
func (m *DistinguishedName) XXX_DiscardUnknown() {
	xxx_messageInfo_DistinguishedName.DiscardUnknown(m)
}

var xxx_messageInfo_DistinguishedName proto.InternalMessageInfo

func (m *DistinguishedName) GetCommonName() string {
	if m != nil {
		return m.CommonName
	}
	return ""
}

func (m *DistinguishedName) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *DistinguishedName) GetOrganizationalUnit() string {
	if m != nil {
		return m.OrganizationalUnit
	}
	return ""
}

func (m *DistinguishedName) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *DistinguishedName) GetLocality() string {
	if m != nil {
		return m.Locality
	}
	return ""
}

func (m *DistinguishedName) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *DistinguishedName) GetStreetAddress() string {
	if m != nil {
		return m.StreetAddress
	}
	return ""
}

func (m *DistinguishedName) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

type Names struct {
	Dnsnames             []string `protobuf:"bytes,1,rep,name=dnsnames,proto3" json:"dnsnames,omitempty"`
	Ipaddrs              []string `protobuf:"bytes,2,rep,name=ipaddrs,proto3" json:"ipaddrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Names) Reset()         { *m = Names{} }
func (m *Names) String() string { return proto.CompactTextString(m) }
func (*Names) ProtoMessage()    {}
func (*Names) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5b8bd6158ea4246, []int{5}
}

func (m *Names) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Names.Unmarshal(m, b)
}
func (m *Names) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Names.Marshal(b, m, deterministic)
}
func (m *Names) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Names.Merge(m, src)
}
func (m *Names) XXX_Size() int {
	return xxx_messageInfo_Names.Size(m)
}
func (m *Names) XXX_DiscardUnknown() {
	xxx_messageInfo_Names.DiscardUnknown(m)
}

var xxx_messageInfo_Names proto.InternalMessageInfo

func (m *Names) GetDnsnames() []string {
	if m != nil {
		return m.Dnsnames
	}
	return nil
}

func (m *Names) GetIpaddrs() []string {
	if m != nil {
		return m.Ipaddrs
	}
	return nil
}

type KeyUsage struct {
	KeyUsage             uint32   `protobuf:"varint,1,opt,name=key_usage,json=keyUsage,proto3" json:"key_usage,omitempty"`
	ExtKeyUsages         []uint32 `protobuf:"varint,2,rep,packed,name=ext_key_usages,json=extKeyUsages,proto3" json:"ext_key_usages,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyUsage) Reset()         { *m = KeyUsage{} }
func (m *KeyUsage) String() string { return proto.CompactTextString(m) }
func (*KeyUsage) ProtoMessage()    {}
func (*KeyUsage) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5b8bd6158ea4246, []int{6}
}

func (m *KeyUsage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyUsage.Unmarshal(m, b)
}
func (m *KeyUsage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyUsage.Marshal(b, m, deterministic)
}
func (m *KeyUsage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyUsage.Merge(m, src)
}
func (m *KeyUsage) XXX_Size() int {
	return xxx_messageInfo_KeyUsage.Size(m)
}
func (m *KeyUsage) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyUsage.DiscardUnknown(m)
}

var xxx_messageInfo_KeyUsage proto.InternalMessageInfo

func (m *KeyUsage) GetKeyUsage() uint32 {
	if m != nil {
		return m.KeyUsage
	}
	return 0
}

func (m *KeyUsage) GetExtKeyUsages() []uint32 {
	if m != nil {
		return m.ExtKeyUsages
	}
	return nil
}

type IssueCertificateRequest struct {
	PublicKey            []byte             `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Subject              *DistinguishedName `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Names                *Names             `protobuf:"bytes,3,opt,name=names,proto3" json:"names,omitempty"`
	NotAfterUnixtime     int64              `protobuf:"varint,4,opt,name=not_after_unixtime,json=notAfterUnixtime,proto3" json:"not_after_unixtime,omitempty"`
	KeyUsage             *KeyUsage          `protobuf:"bytes,5,opt,name=key_usage,json=keyUsage,proto3" json:"key_usage,omitempty"`
	Profile              string             `protobuf:"bytes,6,opt,name=profile,proto3" json:"profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *IssueCertificateRequest) Reset()         { *m = IssueCertificateRequest{} }
func (m *IssueCertificateRequest) String() string { return proto.CompactTextString(m) }
func (*IssueCertificateRequest) ProtoMessage()    {}
func (*IssueCertificateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5b8bd6158ea4246, []int{7}
}

func (m *IssueCertificateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssueCertificateRequest.Unmarshal(m, b)
}
func (m *IssueCertificateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssueCertificateRequest.Marshal(b, m, deterministic)
}
func (m *IssueCertificateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssueCertificateRequest.Merge(m, src)
}
func (m *IssueCertificateRequest) XXX_Size() int {
	return xxx_messageInfo_IssueCertificateRequest.Size(m)
}
func (m *IssueCertificateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IssueCertificateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IssueCertificateRequest proto.InternalMessageInfo

func (m *IssueCertificateRequest) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *IssueCertificateRequest) GetSubject() *DistinguishedName {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *IssueCertificateRequest) GetNames() *Names {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *IssueCertificateRequest) GetNotAfterUnixtime() int64 {
	if m != nil {
		return m.NotAfterUnixtime
	}
	return 0
}

func (m *IssueCertificateRequest) GetKeyUsage() *KeyUsage {
	if m != nil {
		return m.KeyUsage
	}
	return nil
}

func (m *IssueCertificateRequest) GetProfile() string {
	if m != nil {
		return m.Profile
	}
	return ""
}

type IssueCertificateResponse struct {
	Certificate          []byte   `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IssueCertificateResponse) Reset()         { *m = IssueCertificateResponse{} }
func (m *IssueCertificateResponse) String() string { return proto.CompactTextString(m) }
func (*IssueCertificateResponse) ProtoMessage()    {}
func (*IssueCertificateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5b8bd6158ea4246, []int{8}
}

func (m *IssueCertificateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssueCertificateResponse.Unmarshal(m, b)
}
func (m *IssueCertificateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssueCertificateResponse.Marshal(b, m, deterministic)
}
func (m *IssueCertificateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssueCertificateResponse.Merge(m, src)
}
func (m *IssueCertificateResponse) XXX_Size() int {
	return xxx_messageInfo_IssueCertificateResponse.Size(m)
}
func (m *IssueCertificateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IssueCertificateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IssueCertificateResponse proto.InternalMessageInfo

func (m *IssueCertificateResponse) GetCertificate() []byte {
	if m != nil {
		return m.Certificate
	}
	return nil
}

func init() {
	proto.RegisterEnum("kmgm.AuthenticationType", AuthenticationType_name, AuthenticationType_value)
	proto.RegisterType((*HelloRequest)(nil), "kmgm.HelloRequest")
	proto.RegisterType((*HelloResponse)(nil), "kmgm.HelloResponse")
	proto.RegisterType((*GetVersionRequest)(nil), "kmgm.GetVersionRequest")
	proto.RegisterType((*GetVersionResponse)(nil), "kmgm.GetVersionResponse")
	proto.RegisterType((*DistinguishedName)(nil), "kmgm.DistinguishedName")
	proto.RegisterType((*Names)(nil), "kmgm.Names")
	proto.RegisterType((*KeyUsage)(nil), "kmgm.KeyUsage")
	proto.RegisterType((*IssueCertificateRequest)(nil), "kmgm.IssueCertificateRequest")
	proto.RegisterType((*IssueCertificateResponse)(nil), "kmgm.IssueCertificateResponse")
}

func init() { proto.RegisterFile("kmgm.proto", fileDescriptor_d5b8bd6158ea4246) }

var fileDescriptor_d5b8bd6158ea4246 = []byte{
	// 725 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0x5d, 0x6f, 0x1a, 0x47,
	0x14, 0x2d, 0x60, 0x0c, 0x5c, 0x3e, 0x8c, 0x07, 0xa9, 0x5e, 0x51, 0xb9, 0xa5, 0xab, 0x56, 0xb2,
	0xfa, 0xe1, 0xb6, 0xf4, 0xb5, 0x55, 0x82, 0x31, 0x4e, 0x90, 0x63, 0xb0, 0x17, 0x88, 0x14, 0xbf,
	0xac, 0x96, 0xe5, 0x1a, 0x4f, 0xbc, 0xec, 0x6c, 0x76, 0x66, 0x2d, 0x93, 0xd7, 0xfc, 0x94, 0xbc,
	0xe5, 0x57, 0x46, 0xf3, 0xb1, 0xf6, 0x12, 0xe4, 0xb7, 0x3d, 0xe7, 0xcc, 0x9e, 0xb9, 0xe7, 0xce,
	0x9d, 0x01, 0xb8, 0x5b, 0x2d, 0x57, 0xc7, 0x51, 0xcc, 0x04, 0x23, 0x3b, 0xf2, 0xdb, 0x6e, 0x40,
	0xed, 0x35, 0x06, 0x01, 0x73, 0xf0, 0x43, 0x82, 0x5c, 0xd8, 0x5f, 0x72, 0x50, 0x37, 0x04, 0x8f,
	0x58, 0xc8, 0x91, 0xfc, 0x04, 0x55, 0x2f, 0xa2, 0xee, 0x3d, 0xc6, 0x9c, 0xb2, 0xd0, 0xca, 0x75,
	0x72, 0x47, 0x45, 0x07, 0xbc, 0x88, 0xbe, 0xd5, 0x0c, 0x19, 0x42, 0xcb, 0x4b, 0xc4, 0x2d, 0x86,
	0x82, 0xfa, 0x9e, 0xa0, 0x2c, 0x74, 0xc5, 0x3a, 0x42, 0x2b, 0xdf, 0xc9, 0x1d, 0x35, 0xba, 0xd6,
	0xb1, 0xda, 0xb2, 0xb7, 0xb1, 0x60, 0xba, 0x8e, 0xd0, 0x21, 0xde, 0x16, 0x47, 0xfe, 0x84, 0x2c,
	0x8b, 0x0b, 0x37, 0xe1, 0x18, 0x5b, 0x85, 0x4e, 0xee, 0xa8, 0xe2, 0xec, 0x6f, 0x28, 0x33, 0x8e,
	0xb1, 0xdd, 0x82, 0xfd, 0x57, 0x28, 0x4c, 0x1d, 0x69, 0x82, 0x33, 0x20, 0x59, 0xd2, 0xa4, 0xb0,
	0xa0, 0x94, 0x4d, 0x50, 0x71, 0x52, 0x48, 0xbe, 0x87, 0x5d, 0x9f, 0xad, 0x56, 0x54, 0xa8, 0x8a,
	0x2b, 0x8e, 0x41, 0xf6, 0xe7, 0x3c, 0xec, 0x9f, 0x52, 0x2e, 0x68, 0xb8, 0x4c, 0x28, 0xbf, 0xc5,
	0xc5, 0xc8, 0x5b, 0xa9, 0x6e, 0x48, 0x9d, 0x85, 0x6e, 0xe8, 0xad, 0xd0, 0x78, 0x81, 0xa6, 0xd4,
	0x02, 0x1b, 0x6a, 0x2c, 0x5e, 0x7a, 0x21, 0xfd, 0xa8, 0x62, 0x19, 0xd3, 0x0d, 0x8e, 0xfc, 0x05,
	0xad, 0x2c, 0xf6, 0x02, 0x37, 0x09, 0xa9, 0x30, 0x39, 0xc9, 0xa6, 0x34, 0x0b, 0xa9, 0x90, 0xd5,
	0xfb, 0x2c, 0x09, 0x45, 0xbc, 0xb6, 0x76, 0x74, 0xf5, 0x06, 0x92, 0x36, 0x94, 0x03, 0xe6, 0x7b,
	0x01, 0x15, 0x6b, 0xab, 0xa8, 0xa4, 0x47, 0x2c, 0xb5, 0x28, 0x66, 0xf7, 0x34, 0xf4, 0xd1, 0xda,
	0xd5, 0x5a, 0x8a, 0xc9, 0xaf, 0xd0, 0xe0, 0x22, 0x46, 0x14, 0xae, 0xb7, 0x58, 0xc4, 0xc8, 0xb9,
	0x55, 0x52, 0x2b, 0xea, 0x9a, 0xed, 0x69, 0x52, 0xc6, 0x8d, 0x18, 0x17, 0x5e, 0xe0, 0xfa, 0x6c,
	0x81, 0x56, 0x59, 0xc7, 0xd5, 0x54, 0x9f, 0x2d, 0xd0, 0xfe, 0x1f, 0x8a, 0x32, 0x36, 0x97, 0x9b,
	0x2d, 0x42, 0x2e, 0x9b, 0xc2, 0xad, 0x5c, 0xa7, 0x20, 0x37, 0x4b, 0xb1, 0x2c, 0x9f, 0x46, 0x72,
	0x1f, 0x6e, 0xe5, 0x95, 0x94, 0x42, 0xfb, 0x02, 0xca, 0xe7, 0xb8, 0x9e, 0x71, 0x6f, 0x89, 0xe4,
	0x07, 0xa8, 0xdc, 0xe1, 0xda, 0x4d, 0x24, 0x50, 0x8d, 0xad, 0x3b, 0xe5, 0xbb, 0x54, 0xfc, 0x05,
	0x1a, 0xf8, 0x20, 0xdc, 0xc7, 0x05, 0xda, 0xa9, 0xee, 0xd4, 0xf0, 0x41, 0xa4, 0x0e, 0xdc, 0xfe,
	0x94, 0x87, 0x83, 0x21, 0xe7, 0x09, 0xf6, 0x31, 0x16, 0xf4, 0x46, 0x8d, 0x8a, 0x99, 0x0b, 0x72,
	0x08, 0x10, 0x25, 0xf3, 0x80, 0xfa, 0xd2, 0x44, 0xf9, 0xd7, 0x9c, 0x8a, 0x66, 0xce, 0x71, 0x4d,
	0xfe, 0x81, 0x12, 0x4f, 0xe6, 0xef, 0xd1, 0xd7, 0x73, 0x50, 0xed, 0x1e, 0xe8, 0xc9, 0xdd, 0x1a,
	0x01, 0x27, 0x5d, 0x47, 0x7e, 0x86, 0xa2, 0xce, 0x5b, 0x50, 0x3f, 0x54, 0xf5, 0x0f, 0xaa, 0x1d,
	0x8e, 0x56, 0xc8, 0x1f, 0x40, 0x42, 0x26, 0x5c, 0xef, 0x46, 0x60, 0x2c, 0x0f, 0xf9, 0x41, 0xd0,
	0x15, 0xaa, 0x33, 0x2c, 0x38, 0xcd, 0x90, 0x89, 0x9e, 0x14, 0x66, 0x86, 0x27, 0xbf, 0x67, 0x3b,
	0x50, 0x54, 0xa6, 0x0d, 0x6d, 0x9a, 0x46, 0xcc, 0x74, 0xc4, 0x82, 0x52, 0x14, 0xb3, 0x1b, 0x1a,
	0xa4, 0x87, 0x9b, 0x42, 0xfb, 0x3f, 0xb0, 0xb6, 0x9b, 0x60, 0xee, 0x41, 0x07, 0xaa, 0xfe, 0x13,
	0x6d, 0xda, 0x90, 0xa5, 0x7e, 0xbb, 0x06, 0xb2, 0x7d, 0x5b, 0xc9, 0x1e, 0x54, 0x67, 0xa3, 0xc9,
	0xe5, 0xa0, 0x3f, 0x3c, 0x1b, 0x0e, 0x4e, 0x9b, 0xdf, 0x91, 0x3a, 0x54, 0x7a, 0xa3, 0xf1, 0xe8,
	0xdd, 0xc5, 0x78, 0x36, 0x69, 0xe6, 0x48, 0x0b, 0xf6, 0x4e, 0xc6, 0xe3, 0xe9, 0x64, 0xea, 0xf4,
	0x2e, 0xdd, 0xe9, 0xf8, 0x7c, 0x30, 0x6a, 0xe6, 0xe5, 0x4f, 0xfd, 0x37, 0xc3, 0xc1, 0x68, 0xea,
	0xf6, 0x07, 0xce, 0xb4, 0x59, 0xe8, 0xbe, 0x34, 0xaf, 0xcd, 0x04, 0xe3, 0x7b, 0xea, 0x23, 0xf9,
	0x1b, 0x8a, 0x0a, 0x13, 0xa2, 0x63, 0x66, 0x9f, 0xa2, 0x76, 0x6b, 0x83, 0xd3, 0xf5, 0x77, 0xaf,
	0xa0, 0x61, 0xae, 0x76, 0xea, 0xf1, 0x02, 0xe0, 0xe9, 0xbe, 0x13, 0x73, 0x6a, 0x5b, 0xcf, 0x42,
	0xdb, 0xda, 0x16, 0x8c, 0xe5, 0x12, 0x48, 0xa6, 0x53, 0xa9, 0xed, 0x15, 0x34, 0xbf, 0x6d, 0x22,
	0x39, 0xd4, 0x1e, 0xcf, 0x4c, 0x58, 0xfb, 0xc7, 0xe7, 0x64, 0xbd, 0xd1, 0xc9, 0xce, 0x75, 0x3e,
	0x9a, 0xcf, 0x77, 0xd5, 0xf3, 0xfb, 0xef, 0xd7, 0x00, 0x00, 0x00, 0xff, 0xff, 0x29, 0x85, 0x5c,
	0x70, 0x8c, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HelloServiceClient is the client API for HelloService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelloServiceClient interface {
	Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error)
}

type helloServiceClient struct {
	cc *grpc.ClientConn
}

func NewHelloServiceClient(cc *grpc.ClientConn) HelloServiceClient {
	return &helloServiceClient{cc}
}

func (c *helloServiceClient) Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error) {
	out := new(HelloResponse)
	err := c.cc.Invoke(ctx, "/kmgm.HelloService/Hello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelloServiceServer is the server API for HelloService service.
type HelloServiceServer interface {
	Hello(context.Context, *HelloRequest) (*HelloResponse, error)
}

func RegisterHelloServiceServer(s *grpc.Server, srv HelloServiceServer) {
	s.RegisterService(&_HelloService_serviceDesc, srv)
}

func _HelloService_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServiceServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kmgm.HelloService/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServiceServer).Hello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HelloService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kmgm.HelloService",
	HandlerType: (*HelloServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _HelloService_Hello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kmgm.proto",
}

// VersionServiceClient is the client API for VersionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VersionServiceClient interface {
	GetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error)
}

type versionServiceClient struct {
	cc *grpc.ClientConn
}

func NewVersionServiceClient(cc *grpc.ClientConn) VersionServiceClient {
	return &versionServiceClient{cc}
}

func (c *versionServiceClient) GetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error) {
	out := new(GetVersionResponse)
	err := c.cc.Invoke(ctx, "/kmgm.VersionService/GetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VersionServiceServer is the server API for VersionService service.
type VersionServiceServer interface {
	GetVersion(context.Context, *GetVersionRequest) (*GetVersionResponse, error)
}

func RegisterVersionServiceServer(s *grpc.Server, srv VersionServiceServer) {
	s.RegisterService(&_VersionService_serviceDesc, srv)
}

func _VersionService_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersionServiceServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kmgm.VersionService/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersionServiceServer).GetVersion(ctx, req.(*GetVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VersionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kmgm.VersionService",
	HandlerType: (*VersionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVersion",
			Handler:    _VersionService_GetVersion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kmgm.proto",
}

// CertificateServiceClient is the client API for CertificateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CertificateServiceClient interface {
	IssueCertificate(ctx context.Context, in *IssueCertificateRequest, opts ...grpc.CallOption) (*IssueCertificateResponse, error)
}

type certificateServiceClient struct {
	cc *grpc.ClientConn
}

func NewCertificateServiceClient(cc *grpc.ClientConn) CertificateServiceClient {
	return &certificateServiceClient{cc}
}

func (c *certificateServiceClient) IssueCertificate(ctx context.Context, in *IssueCertificateRequest, opts ...grpc.CallOption) (*IssueCertificateResponse, error) {
	out := new(IssueCertificateResponse)
	err := c.cc.Invoke(ctx, "/kmgm.CertificateService/IssueCertificate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CertificateServiceServer is the server API for CertificateService service.
type CertificateServiceServer interface {
	IssueCertificate(context.Context, *IssueCertificateRequest) (*IssueCertificateResponse, error)
}

func RegisterCertificateServiceServer(s *grpc.Server, srv CertificateServiceServer) {
	s.RegisterService(&_CertificateService_serviceDesc, srv)
}

func _CertificateService_IssueCertificate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IssueCertificateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertificateServiceServer).IssueCertificate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kmgm.CertificateService/IssueCertificate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertificateServiceServer).IssueCertificate(ctx, req.(*IssueCertificateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CertificateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kmgm.CertificateService",
	HandlerType: (*CertificateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IssueCertificate",
			Handler:    _CertificateService_IssueCertificate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kmgm.proto",
}
